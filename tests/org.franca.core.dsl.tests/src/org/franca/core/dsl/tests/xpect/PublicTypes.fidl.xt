// XPECT_SETUP org.franca.core.dsl.tests.xpect.FrancaIDLXpectTests END_SETUP
package f

interface InterfaceWithPublic {
	public struct publicStruct {
		Boolean someType
	}

	public union publicUnion {
		Float someType
	}

	public array publicArray of Double

	public enumeration publicEnum {
		first
		second
		third
	}

	public map publicMap {
		Boolean to Float
	}

	public typedef publicTypeDef is String

	struct privateStruct {
		Boolean someType
	}

	union privateUnion {
		Float someType
	}

	array privateArray of Double

	enumeration privateEnum {
		first
		second
		third
	}

	map privateMap {
		Boolean to Float
	}

	typedef privateTypeDef is String

}

interface ReferringInterface {
	//  XPECT noIssues ---> "attribute is reference a type InterfaceWithPublic.publicUnion which is public"
	 attribute InterfaceWithPublic.publicUnion noError
	//  XPECT  errors  ---> "attribute is referencing a type InterfaceWithPublic.privateArray which is not public"
	 attribute InterfaceWithPublic.privateArray errorArray

//  XPECT  errors  ---> "attribute is referencing a type InterfaceWithPublic.privateEnum which is not public"
	 attribute InterfaceWithPublic.privateEnum errorEnum

	 
	 //  XPECT  errors  ---> "attribute is referencing a type InterfaceWithPublic.privateMap which is not public"
	 attribute InterfaceWithPublic.privateMap errorMap
	 
	 //  XPECT  errors  ---> "attribute is referencing a type InterfaceWithPublic.privateStruct which is not public"
	 attribute InterfaceWithPublic.privateStruct errorStruct
	 
	 //  XPECT  errors  ---> "attribute is referencing a type InterfaceWithPublic.privateTypeDef which is not public"
	 attribute InterfaceWithPublic.privateTypeDef errorType
	 
	
	 
	 //  XPECT  noIssues  ---> "attribute is referencing a type InterfaceWithPublic.publicEnum which is  public"
	 attribute InterfaceWithPublic.publicEnum publicEnum
	 
	 //  XPECT  noIssues  ---> "attribute is referencing a type InterfaceWithPublic.publicArray which is  public"
	 attribute InterfaceWithPublic.publicArray publicArray
	 
}
