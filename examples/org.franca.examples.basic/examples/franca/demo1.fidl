// Franca IDL Demo 1
package org.franca.examples.demo

import org.franca.examples.demo.* from "basic_types.fidl"

<** @description : Interface providing common playback functionality
                   (applicable to currently active player).           **>
interface PlayerAPI {
	version { major 5 minor 0 }

	<** @description : Currently active player. All other players will reject any requests. **>
	attribute tPlayer activePlayer

	<** @description : Prior to using a player, it has to be activated using this request. **>
	method setActivePlayer {
		in {
			<** @description : The player to be activated. **>
			tPlayer player
			Int32 newparam
		}
		out {
			<** @description : Result code of the requested operation. **>
			tResultCode resultCode
			tExampleUnion otherStuff
		}
	}

	method add {
		in {
			UInt32 a
			UInt32 b
		}
		out {
			UInt32 result
		}	
	}
	
	
	<** @description : Response for attaching an output device to a control context. **>
	broadcast attachOutput {
		out {
			<** @description : Result code of the requested operation. **>
			tResultCode resultCode

			<** @description : Data of affected control context output(s). **>
			tOutputInfoList outputInfoList
		}
	}

	// specification of dynamic behaviour on the interface 
	contract {
		PSM {
			state idle
			state working
			
			transition initial -> idle { }
			transition idle -> working {
				< call setActivePlayer >
			}
			transition working -> idle {
				< signal attachOutput >
			}
		}
	}

	// *** data types

	<** @description : Different types of player implementations. **>
	enumeration tPlayer {
		PLAYER_UNKNOWN  = "0"  // unknown player
		PLAYER_FILE     = "1"
		PLAYER_EXTERNAL = "2"
	}

	<** @description : Vector of audio information structures. **>
	array tAudioInformationList of tAudioInformation

	<** @description : Struct containing the configuration of the audio channels. **>
	struct tAudioChannelConfiguration {
		<** @description : The number of front channels. **>
		UInt8 front

		<** @description : The number of surround (rear) channels. **>
		UInt8 surround

		<** @description : The number of effect (LFE) channels. **>
		UInt8 effect
	}
	
	<** @description : This is an example for a union data structure **>
	union tExampleUnion {
		UInt32 asInteger
		String asString
		tPlayer asEnum
	}
}

